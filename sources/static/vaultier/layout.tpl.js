Ember.TEMPLATES["Layout/SecurityBox"]=Ember.Handlebars.template(function(s,a,e,t,n){function r(s,a){var t,n,r,u="";return a.buffer.push('\r\n    <div class="vlt-security-box dropdown">\r\n        '),a.buffer.push(c((n=e.gravatarImg||s&&s.gravatarImg,r={hash:{size:25,"class":"vlt-avatar"},hashTypes:{size:"INTEGER","class":"STRING"},hashContexts:{size:s,"class":s},contexts:[s],types:["ID"],data:a},n?n.call(s,"auth.user.cleanValues.email",r):f.call(s,"gravatarImg","auth.user.cleanValues.email",r)))),a.buffer.push('\r\n\r\n        <a href="#" class="vlt-username dropdown-toggle" data-toggle="dropdown">\r\n            '),a.buffer.push(c((n=e.ellipsis||s&&s.ellipsis,r={hash:{},hashTypes:{},hashContexts:{},contexts:[s,s],types:["ID","INTEGER"],data:a},n?n.call(s,"auth.user.cleanValues.nickname",12,r):f.call(s,"ellipsis","auth.user.cleanValues.nickname",12,r)))),a.buffer.push('\r\n        </a>\r\n\r\n        <ul class="dropdown-menu caret-right vlt-dropdown">\r\n            <li>'),n=e["link-to"]||s&&s["link-to"],r={hash:{},hashTypes:{},hashContexts:{},inverse:b.noop,fn:b.program(2,h,a),contexts:[s],types:["STRING"],data:a},t=n?n.call(s,"Settings.index",r):f.call(s,"link-to","Settings.index",r),(t||0===t)&&a.buffer.push(t),a.buffer.push("</li>\r\n            <li><a "),a.buffer.push(c(e.action.call(s,"logout",{hash:{target:"view"},hashTypes:{target:"ID"},hashContexts:{target:s},contexts:[s],types:["ID"],data:a}))),a.buffer.push(' href="" >Logout</a></li>\r\n\r\n            '),t=e["if"].call(s,"showToken",{hash:{},hashTypes:{},hashContexts:{},inverse:b.noop,fn:b.program(4,l,a),contexts:[s],types:["ID"],data:a}),(t||0===t)&&a.buffer.push(t),a.buffer.push("\r\n        </ul>\r\n    </div>\r\n"),u}function h(s,a){a.buffer.push("Settings")}function l(s,a){var t="";return a.buffer.push("\r\n                <li><a "),a.buffer.push(c(e["bind-attr"].call(s,{hash:{href:"auth.token"},hashTypes:{href:"ID"},hashContexts:{href:s},contexts:[],types:[],data:a}))),a.buffer.push(' class="copy-token" >Copy token to clipboard</a></li>\r\n            '),t}function u(s,a){var t,n,r,h="";return a.buffer.push('\r\n    <div class=" vlt-security-box vlt-anonymous">\r\n       '),n=e["link-to"]||s&&s["link-to"],r={hash:{"class":"btn btn-primary btn-sm",activeClass:""},hashTypes:{"class":"STRING",activeClass:"STRING"},hashContexts:{"class":s,activeClass:s},inverse:b.noop,fn:b.program(7,o,a),contexts:[s],types:["STRING"],data:a},t=n?n.call(s,"AuthLogin",r):f.call(s,"link-to","AuthLogin",r),(t||0===t)&&a.buffer.push(t),a.buffer.push("\r\n       "),n=e["link-to"]||s&&s["link-to"],r={hash:{"class":"btn btn-default btn-sm",activeClass:""},hashTypes:{"class":"STRING",activeClass:"STRING"},hashContexts:{"class":s,activeClass:s},inverse:b.noop,fn:b.program(9,i,a),contexts:[s],types:["STRING"],data:a},t=n?n.call(s,"AuthRegister",r):f.call(s,"link-to","AuthRegister",r),(t||0===t)&&a.buffer.push(t),a.buffer.push("\r\n    </div>\r\n"),h}function o(s,a){a.buffer.push("Login")}function i(s,a){a.buffer.push("Create an account")}this.compilerInfo=[4,">= 1.0.0"],e=this.merge(e,Ember.Handlebars.helpers),n=n||{};var p,c=this.escapeExpression,f=e.helperMissing,b=this;p=e["if"].call(a,"auth.isAuthenticated",{hash:{},hashTypes:{},hashContexts:{},inverse:b.program(6,u,n),fn:b.program(1,r,n),contexts:[a],types:["ID"],data:n}),n.buffer.push(p||0===p?p:"")});
Ember.TEMPLATES["Layout/WorkspaceBox"]=Ember.Handlebars.template(function(e,s,r,n,a){function o(e,s){var n,a,o,l="";return s.buffer.push('\r\n    <div class="vlt-wspace-box dropdown">\r\n\r\n        <img class="vlt-wspaceimg" src="/static/vaultier/images/icon-workspace-white.png ">\r\n\r\n        <a href="#" class="vlt-wspacename dropdown-toggle" data-toggle="dropdown">\r\n            '),s.buffer.push(f((a=r.ellipsis||e&&e.ellipsis,o={hash:{},hashTypes:{},hashContexts:{},contexts:[e,e],types:["ID","INTEGER"],data:s},a?a.call(e,"env.workspace.cleanValues.name",20,o):u.call(e,"ellipsis","env.workspace.cleanValues.name",20,o)))),s.buffer.push('\r\n        </a>\r\n\r\n        <ul class="dropdown-menu caret-right">\r\n            <li>\r\n                '),a=r["link-to"]||e&&e["link-to"],o={hash:{},hashTypes:{},hashContexts:{},inverse:c.noop,fn:c.program(2,t,s),contexts:[e,e],types:["STRING","ID"],data:s},n=a?a.call(e,"Workspace.index","env.workspace",o):u.call(e,"link-to","Workspace.index","env.workspace",o),(n||0===n)&&s.buffer.push(n),s.buffer.push("\r\n            </li>\r\n\r\n            "),n=r["if"].call(e,"env.workspace.perms.update",{hash:{},hashTypes:{},hashContexts:{},inverse:c.noop,fn:c.program(4,p,s),contexts:[e],types:["ID"],data:s}),(n||0===n)&&s.buffer.push(n),s.buffer.push('\r\n\r\n            <li class="divider"></li>\r\n\r\n            <li>\r\n                '),a=r["link-to"]||e&&e["link-to"],o={hash:{},hashTypes:{},hashContexts:{},inverse:c.noop,fn:c.program(7,h,s),contexts:[e],types:["STRING"],data:s},n=a?a.call(e,"Workspaces.select",o):u.call(e,"link-to","Workspaces.select",o),(n||0===n)&&s.buffer.push(n),s.buffer.push("\r\n            </li>\r\n\r\n        </ul>\r\n    </div>\r\n"),l}function t(e,s){s.buffer.push("\r\n                    Go to workspace dashboard\r\n                ")}function p(e,s){var n,a,o,t="";return s.buffer.push("\r\n            <li>\r\n                "),a=r["link-to"]||e&&e["link-to"],o={hash:{},hashTypes:{},hashContexts:{},inverse:c.noop,fn:c.program(5,l,s),contexts:[e,e],types:["STRING","ID"],data:s},n=a?a.call(e,"Workspace.edit","env.workspace",o):u.call(e,"link-to","Workspace.edit","env.workspace",o),(n||0===n)&&s.buffer.push(n),s.buffer.push("\r\n            </li>\r\n            "),t}function l(e,s){s.buffer.push("\r\n                    Setup workspace\r\n                ")}function h(e,s){s.buffer.push("\r\n                    Switch to another workspace\r\n                ")}this.compilerInfo=[4,">= 1.0.0"],r=this.merge(r,Ember.Handlebars.helpers),a=a||{};var i,c=this,u=r.helperMissing,f=this.escapeExpression;i=r["if"].call(s,"env.workspace",{hash:{},hashTypes:{},hashContexts:{},inverse:c.noop,fn:c.program(1,o,a),contexts:[s],types:["ID"],data:a}),a.buffer.push(i||0===i?i:"")});
Ember.TEMPLATES["Layout/SearchBox"]=Ember.Handlebars.template(function(e,r,a,l,s){this.compilerInfo=[4,">= 1.0.0"],a=this.merge(a,Ember.Handlebars.helpers),s=s||{},s.buffer.push('<div class="vlt-search-box">\n    <select placeholder="Search ALT+S"></select>\n</div>\n')});
Ember.TEMPLATES["Layout/Breadcrumbs"]=Ember.Handlebars.template(function(s,r,e,a,n){function t(s,r){var a,n="";return r.buffer.push('\r\n    <div class="vlt-breads">\r\n        <div class="container-full">\r\n            '),a=e.each.call(s,"breadcrumbs.items",{hash:{},hashTypes:{},hashContexts:{},inverse:l.noop,fn:l.program(2,h,r),contexts:[s],types:["ID"],data:r}),(a||0===a)&&r.buffer.push(a),r.buffer.push('\r\n        </div>\r\n        <div class="clearfix"></div>\r\n    </div>\r\n'),n}function h(s,r){var a,n="";return r.buffer.push("\r\n                "),a=e["if"].call(s,"last",{hash:{},hashTypes:{},hashContexts:{},inverse:l.program(6,p,r),fn:l.program(3,f,r),contexts:[s],types:["ID"],data:r}),(a||0===a)&&r.buffer.push(a),r.buffer.push("\r\n\r\n                "),a=e.unless.call(s,"last",{hash:{},hashTypes:{},hashContexts:{},inverse:l.noop,fn:l.program(8,c,r),contexts:[s],types:["ID"],data:r}),(a||0===a)&&r.buffer.push(a),r.buffer.push("\r\n            "),n}function f(s,r){var a,n="";return r.buffer.push('\r\n                    <div class="vlt-bread active">\r\n                        <span class="vlt-bread-inner">\r\n                            '),a=e["if"].call(s,"icon",{hash:{},hashTypes:{},hashContexts:{},inverse:l.noop,fn:l.program(4,u,r),contexts:[s],types:["ID"],data:r}),(a||0===a)&&r.buffer.push(a),r.buffer.push("\r\n\r\n                            "),a=e._triageMustache.call(s,"title",{hash:{},hashTypes:{},hashContexts:{},contexts:[s],types:["ID"],data:r}),(a||0===a)&&r.buffer.push(a),r.buffer.push("\r\n                         </span>\r\n                    </div>\r\n                "),n}function u(s,r){var a="";return r.buffer.push('\r\n                                <img class="vlt-icon" '),r.buffer.push(i(e["bind-attr"].call(s,{hash:{src:"icon"},hashTypes:{src:"ID"},hashContexts:{src:s},contexts:[],types:[],data:r}))),r.buffer.push(">\r\n                            "),a}function p(s,r){var a,n="";return r.buffer.push('\r\n                    <div class="vlt-bread">\r\n                        <a '),r.buffer.push(i(e["bind-attr"].call(s,{hash:{href:"link"},hashTypes:{href:"ID"},hashContexts:{href:s},contexts:[],types:[],data:r}))),r.buffer.push(' class="vlt-bread-inner">\r\n                            '),a=e["if"].call(s,"icon",{hash:{},hashTypes:{},hashContexts:{},inverse:l.noop,fn:l.program(4,u,r),contexts:[s],types:["ID"],data:r}),(a||0===a)&&r.buffer.push(a),r.buffer.push("\r\n\r\n                            "),a=e._triageMustache.call(s,"title",{hash:{},hashTypes:{},hashContexts:{},contexts:[s],types:["ID"],data:r}),(a||0===a)&&r.buffer.push(a),r.buffer.push("\r\n                        </a>\r\n                    </div>\r\n                "),n}function c(s,r){r.buffer.push('\r\n                    <div class="vlt-separator">\r\n                    |\r\n                    </div>\r\n                ')}this.compilerInfo=[4,">= 1.0.0"],e=this.merge(e,Ember.Handlebars.helpers),n=n||{};var o,i=this.escapeExpression,l=this;o=e["if"].call(r,"breadcrumbs",{hash:{},hashTypes:{},hashContexts:{},inverse:l.noop,fn:l.program(1,t,n),contexts:[r],types:["ID"],data:n}),n.buffer.push(o||0===o?o:"")});
Ember.TEMPLATES["Layout/LayoutStandard"]=Ember.Handlebars.template(function(a,r,s,n,e){function t(a,r){var n,e,t="";return r.buffer.push("\r\n                <li>\r\n                    "),r.buffer.push(c((n=s.render||a&&a.render,e={hash:{},hashTypes:{},hashContexts:{},contexts:[a,a],types:["STRING","ID"],data:r},n?n.call(a,"LayoutSearchBox","LayoutWorkspaceBox",e):p.call(a,"render","LayoutSearchBox","LayoutWorkspaceBox",e)))),r.buffer.push("\r\n                </li>\r\n            "),t}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,Ember.Handlebars.helpers),e=e||{};var l,o,u,h="",p=s.helperMissing,c=this.escapeExpression,i=this;return e.buffer.push('<nav class="vlt-navbar navbar navbar-static-top navbar-default" role="navigation">\r\n    <!-- Brand and toggle get grouped for better mobile display -->\r\n    <div class="navbar-header">\r\n        <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">\r\n            <span class="sr-only">Toggle navigation</span>\r\n            <span class="icon-bar"></span>\r\n            <span class="icon-bar"></span>\r\n            <span class="icon-bar"></span>\r\n        </button>\r\n        <a class="navbar-brand" href="#">\r\n            <img class="vlt-logo" src="/static/vaultier/images/logo.png"/>\r\n            <span class="vlt-brand">\r\n            Vaultier\r\n            </span>\r\n        </a>\r\n    </div>\r\n\r\n    <!-- Collect the nav links, forms, and other content for toggling -->\r\n    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">\r\n        <ul class="nav navbar-nav">\r\n            '),l=s["if"].call(r,"auth.isAuthenticated",{hash:{},hashTypes:{},hashContexts:{},inverse:i.noop,fn:i.program(1,t,e),contexts:[r],types:["ID"],data:e}),(l||0===l)&&e.buffer.push(l),e.buffer.push('\r\n        </ul>\r\n        <ul class="nav navbar-nav navbar-right">\r\n            <li>\r\n                '),e.buffer.push(c((o=s.render||r&&r.render,u={hash:{},hashTypes:{},hashContexts:{},contexts:[r,r],types:["STRING","ID"],data:e},o?o.call(r,"LayoutWorkspaceBox","LayoutWorkspaceBox",u):p.call(r,"render","LayoutWorkspaceBox","LayoutWorkspaceBox",u)))),e.buffer.push("\r\n            </li>\r\n            <li>\r\n                "),e.buffer.push(c((o=s.render||r&&r.render,u={hash:{},hashTypes:{},hashContexts:{},contexts:[r,r],types:["STRING","ID"],data:e},o?o.call(r,"LayoutSecurityBox","LayoutSecurityBox",u):p.call(r,"render","LayoutSecurityBox","LayoutSecurityBox",u)))),e.buffer.push("\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <!-- /.navbar-collapse -->\r\n</nav>\r\n\r\n\r\n\r\n"),e.buffer.push(c((o=s.partial||r&&r.partial,u={hash:{},hashTypes:{},hashContexts:{},contexts:[r],types:["STRING"],data:e},o?o.call(r,"Layout/Breadcrumbs",u):p.call(r,"partial","Layout/Breadcrumbs",u)))),e.buffer.push('\r\n\r\n<div class="vlt-layout-yield">\r\n    '),l=s._triageMustache.call(r,"yield",{hash:{},hashTypes:{},hashContexts:{},contexts:[r],types:["ID"],data:e}),(l||0===l)&&e.buffer.push(l),e.buffer.push("\r\n\r\n</div>\r\n\r\n"),e.buffer.push(c((o=s.partial||r&&r.partial,u={hash:{},hashTypes:{},hashContexts:{},contexts:[r],types:["STRING"],data:e},o?o.call(r,"Layout/Footer",u):p.call(r,"partial","Layout/Footer",u)))),e.buffer.push("\r\n\r\n"),h});
Ember.TEMPLATES["Layout/Confirm"]=Ember.Handlebars.template(function(a,t,s,e,r){this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,Ember.Handlebars.helpers),r=r||{};var n,d="",h=this.escapeExpression;return r.buffer.push('<div class="modal fade">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>\r\n                <h4 class="modal-title">'),n=s._triageMustache.call(t,"title",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(n||0===n)&&r.buffer.push(n),r.buffer.push('</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <p>\r\n                    '),n=s._triageMustache.call(t,"text",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:r}),(n||0===n)&&r.buffer.push(n),r.buffer.push('\r\n                </p>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <a href="#" type="button" class="btn btn-default" data-dismiss="modal">Cancel</a>\r\n                <a href="#" '),r.buffer.push(h(s.action.call(t,"ok",{hash:{target:"view"},hashTypes:{target:"ID"},hashContexts:{target:t},contexts:[t],types:["ID"],data:r}))),r.buffer.push(' type="button" class="btn btn-primary">Ok</a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>'),d});
Ember.TEMPLATES["Layout/Footer"]=Ember.Handlebars.template(function(t,n,e,s,i){this.compilerInfo=[4,">= 1.0.0"],e=this.merge(e,Ember.Handlebars.helpers),i=i||{};var a,l="";return i.buffer.push('<div id="vlt-footer">\n    <div class="container-full">\n        <div class="pull-left vlt-business">\n            <p>\n                <a href="http://rightclick.formees.cz/f/vaultier/" class="btn btn-success" target="_blank">\n                    Enterprise Edition & Business Solutions\n                </a>\n                <a href="mailto:info@rclick.cz" class="btn btn-default">\n                    Contact us\n                </a>\n            </p>\n        </div>\n        <div class="pull-right vlt-rclick">\n            <a href="http://www.rclick.cz/" target="_blank">\n                <img height="35px" src="/static/vaultier/images/rclick.png">\n            </a></p>\n        </div>\n        <div class="pull-right vlt-version">\n           Vaultier  '),a=e._triageMustache.call(n,"config.VERSION",{hash:{},hashTypes:{},hashContexts:{},contexts:[n],types:["ID"],data:i}),(a||0===a)&&i.buffer.push(a),i.buffer.push("\n        </div>\n    </div>\n</div>\n"),l});
//# sourceMappingURL=data:application/json;base64,