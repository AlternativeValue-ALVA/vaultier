#!/bin/bash
set -e

. /usr/share/debconf/confmodule

db_get vaultier/domain
domain="$RET"
db_get vaultier/email_host
email_host="$RET"
db_get vaultier/email_port
email_port="$RET"
if [ -z "$email_port" ]; then
    email_port="25"
fi
db_get vaultier/email_user
email_user="$RET"
db_get vaultier/email_password
email_password="$RET"
db_get vaultier/email_tls
email_tls="$RET"
if $email_tls; then
    email_tls="True"
else
    email_tls="False"
fi


# register vaultier as into init scripts
# update-rc.d django defaults 90 >/dev/null

# add Vaultier user, if it does not exists
id -u vaultier &>/dev/null || useradd -d /opt/vaultier -s /bin/bash vaultier

mkdir -p /opt/vaultier/logs/

# Setup postgres account
service postgresql start
sudo -u postgres psql postgres -tAc "SELECT 1 FROM pg_roles WHERE rolname='vaultier'" | grep -q 1 || \
    psql --command "CREATE USER vaultier WITH SUPERUSER PASSWORD 'vaultier';"
sudo -u postgres psql -l | grep vaultier | wc -l || createdb -O vaultier vaultier

# install Vaultier
cd /opt/vaultier
virtualenv venv
/opt/vaultier/venv/bin/pip install Vaultier-0.7.0.tar.gz
rm /opt/vaultier/Vaultier-0.7.0.tar.gz
export PYTHONPATH=/opt/vaultier/venv/lib/python2.7/site-packages/vaultier

# Create a configuration, if we don't have one
if [ ! -f /opt/vaultier/vaultier_conf.py ]; then
    /opt/vaultier/venv/bin/vaultier init --managed
fi

if [ -f /etc/init.d/postgresql ]; then
    /opt/vaultier/venv/bin/vaultier setup
fi
chown -R vaultier:vaultier /opt/vaultier

# update configuration files
sed -i "s/DEB_DOMAIN/${domain}/g" /etc/nginx/sites-available/vaultier
sed -i "s/os.getenv('VAULTIER_DOMAIN', 'www.example.com'),/'${domain}',/g" /opt/vaultier/vaultier_conf.py
sed -i "s/' + os.getenv('VAULTIER_DOMAIN', 'www.example.com') + '/${domain}/g" /opt/vaultier/vaultier_conf.py
sed -i "s/os.getenv('VAULTIER_EMAIL_HOST', '')/'${email_host}'/g" /opt/vaultier/vaultier_conf.py
sed -i "s/os.getenv('VAULTIER_EMAIL_PORT', 25)/${email_port}/g" /opt/vaultier/vaultier_conf.py
sed -i "s/os.getenv('VAULTIER_EMAIL_USER', '')/'${email_user}'/g" /opt/vaultier/vaultier_conf.py
sed -i "s/os.getenv('VAULTIER_EMAIL_PASSWORD', '')/'${email_password}'/g" /opt/vaultier/vaultier_conf.py
sed -i "s/bool(os.getenv('VAULTIER_EMAIL_TLS', False))/${email_tls}/g" /opt/vaultier/vaultier_conf.py

# symlink configs
ln -s /etc/nginx/sites-available/vaultier /etc/nginx/sites-enabled
ln -s /etc/uwsgi/apps-available/vaultier.ini /etc/uwsgi/apps-enabled

# start uwsgi
service uwsgi start || true

# start nginx
service nginx start

# update & run supervisor
service supervisor start
supervisorctl update

db_stop
